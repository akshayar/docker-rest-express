    {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "Deploy a service on AWS Fargate, hosted in a public subnet, and accessible via a public load balancer.",
        "Parameters": {
            "StackName": {
                "Type": "String",
                "Default": "calculator-ecs",
                "Description": "The name of the parent Fargate networking stack that you created. Necessary to locate and reference resources created by that stack."
            },
            "ServiceName": {
                "Type": "String",
                "Default": "calculator-add-sub",
                "Description": "A name for the service"
            },
            "ImageUrl": {
                "Type": "String",
                "Default": "arawa3/express-add-sub",
                "Description": "The url of a docker image that contains the application process that will handle the traffic for this service"
            },
            "ContainerPort": {
                "Type": "Number",
                "Default": 8000,
                "Description": "What port number the application inside the docker container is binding to"
            },
            "ContainerCpu": {
                "Type": "Number",
                "Default": 256,
                "Description": "How much CPU to give the container. 1024 is 1 CPU"
            },
            "ContainerMemory": {
                "Type": "Number",
                "Default": 512,
                "Description": "How much memory in megabytes to give the container"
            },
            "Path": {
                "Type": "String",
                "Default": "/api/add/*",
                "Description": "A path on the public load balancer that this service should be connected to. Use * to send all load balancer traffic to this service."
            },
            "HealthCheckPath": {
                "Type": "String",
                "Default": "/api/add/1/1"
            },
            "HealthCheckGracePeriodSeconds": {
                "Type": "String",
                "Default": 60
            },
            "Priority": {
                "Type": "Number",
                "Default": 1,
                "Description": "The priority for the routing rule added to the load balancer. This only applies if your have multiple services which have been assigned to different paths on the load balancer."
            },
            "DesiredCount": {
                "Type": "Number",
                "Default": 2,
                "Description": "How many copies of the service task to run"
            }
        },
        "Resources": {
            "ECSTaskRole": {
                "Type": "AWS::IAM::Role",
                "Properties": {
                    "AssumeRolePolicyDocument": {
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Principal": {
                                    "Service": [
                                        "ecs-tasks.amazonaws.com"
                                    ]
                                },
                                "Action": [
                                    "sts:AssumeRole"
                                ]
                            }
                        ]
                    },
                    "Path": "/",
                    "Policies": [
                        {
                            "PolicyName": "ecs-task",
                            "PolicyDocument": {
                                "Statement": [
                                    {
                                        "Effect": "Allow",
                                        "Action": [
                                            "s3:*"
                                        ],
                                        "Resource": "*"
                                    }
                                ]
                            }
                        }
                    ]
                }
            },
            "LogGroupName":{
                "Type" : "AWS::Logs::LogGroup",
                "Properties" : {
                  "LogGroupName" : {
                    "Fn::Sub": "/ecs/${ServiceName}"
                  }
                }
            },
            "TaskDefinition": {
                "Type": "AWS::ECS::TaskDefinition",
                "DependsOn": "LogGroupName",
                "Properties": {
                    "Family": {
                        "Ref": "ServiceName"
                    },
                    "Cpu": {
                        "Ref": "ContainerCpu"
                    },
                    "Memory": {
                        "Ref": "ContainerMemory"
                    },
                    "NetworkMode": "awsvpc",
                    "RequiresCompatibilities": [
                        "FARGATE"
                    ],
                    "ExecutionRoleArn": {
                        "Fn::ImportValue": {
                            "Fn::Join": [
                                ":",
                                [
                                    {
                                        "Ref": "StackName"
                                    },
                                    "ECSTaskExecutionRole"
                                ]
                            ]
                        }
                    },
                    "TaskRoleArn": {"Fn::GetAtt" : ["ECSTaskRole", "Arn"] },
                    "ContainerDefinitions": [
                        {
                            "Name": {
                                "Ref": "ServiceName"
                            },
                            "Image": {
                                "Ref": "ImageUrl"
                            },
                            "LogConfiguration": {
                                "LogDriver": "awslogs",
                                "Options": {
                                    "awslogs-group": {
                                        "Fn::Sub": "/ecs/${ServiceName}"
                                    },
                                    "awslogs-region": {"Fn::Sub": "${AWS::Region}"},
                                    "awslogs-stream-prefix": {"Fn::Sub": "aws-${ServiceName}"}
                                }
                            },
                            "PortMappings": [
                                {
                                    "ContainerPort": {
                                        "Ref": "ContainerPort"
                                    },
                                    "Protocol":"tcp"
                                }
                            ],
                            "Environment":[
                                {
                                    "Name":"PORT",
                                    "Value":{"Ref": "ContainerPort"}
                                }
                            ]
                        }
                    ]
                }
            },
            "Service": {
                "Type": "AWS::ECS::Service",
                "DependsOn": "LoadBalancerRule",
                "Properties": {
                    "ServiceName": {
                        "Ref": "ServiceName"
                    },
                    "Cluster": {
                        "Fn::ImportValue": {
                            "Fn::Join": [
                                ":",
                                [
                                    {
                                        "Ref": "StackName"
                                    },
                                    "ClusterName"
                                ]
                            ]
                        }
                    },
                    "LaunchType": "FARGATE",
                    "DeploymentConfiguration": {
                        "MaximumPercent": 200,
                        "MinimumHealthyPercent": 75
                    },
                    "DesiredCount": {
                        "Ref": "DesiredCount"
                    },
                    "HealthCheckGracePeriodSeconds": {
                        "Ref": "HealthCheckGracePeriodSeconds"
                    },
                    "NetworkConfiguration": {
                        "AwsvpcConfiguration": {
                            "AssignPublicIp": "ENABLED",
                            "SecurityGroups": [
                                {
                                    "Fn::ImportValue": {
                                        "Fn::Join": [
                                            ":",
                                            [
                                                {
                                                    "Ref": "StackName"
                                                },
                                                "FargateContainerSecurityGroup"
                                            ]
                                        ]
                                    }
                                }
                            ],
                            "Subnets": [
                                {
                                    "Fn::ImportValue": {
                                        "Fn::Join": [
                                            ":",
                                            [
                                                {
                                                    "Ref": "StackName"
                                                },
                                                "PublicSubnetOne"
                                            ]
                                        ]
                                    }
                                },
                                {
                                    "Fn::ImportValue": {
                                        "Fn::Join": [
                                            ":",
                                            [
                                                {
                                                    "Ref": "StackName"
                                                },
                                                "PublicSubnetTwo"
                                            ]
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "TaskDefinition": {
                        "Ref": "TaskDefinition"
                    },
                    "LoadBalancers": [
                        {
                            "ContainerName": {
                                "Ref": "ServiceName"
                            },
                            "ContainerPort": {
                                "Ref": "ContainerPort"
                            },
                            "TargetGroupArn": {
                                "Ref": "TargetGroup"
                            }
                        }
                    ],
                    "ServiceRegistries": [
                        {
                            "RegistryArn": {
                                "Fn::GetAtt": [
                                    "ServiceDiscoveryService",
                                    "Arn"
                                ]
                            }
                        }
                    ]
                }
            },
            "ServiceDiscoveryService": {
                "Type": "AWS::ServiceDiscovery::Service",
                "Properties": {
                    "Name": {
                        "Ref": "ServiceName"
                    },
                    "DnsConfig": {
                        "DnsRecords": [
                            {
                                "Type": "A",
                                "TTL": "10"
                            }
                        ],
                        "NamespaceId": {
                            "Fn::ImportValue": {
                                "Fn::Sub": "${StackName}:PrivateServiceDiscoveryNamespace"
                            }
                        }
                    },
                    "HealthCheckCustomConfig": {
                        "FailureThreshold": 1
                    }
                }
            },
            "TargetGroup": {
                "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
                "Properties": {
                    "HealthCheckIntervalSeconds": 6,
                    "HealthCheckPath": {
                        "Ref": "HealthCheckPath"
                    },
                    "HealthCheckProtocol": "HTTP",
                    "HealthCheckTimeoutSeconds": 5,
                    "HealthyThresholdCount": 2,
                    "TargetType": "ip",
                    "Name": {
                        "Ref": "ServiceName"
                    },
                    "Port": {
                        "Ref": "ContainerPort"
                    },
                    "Protocol": "HTTP",
                    "UnhealthyThresholdCount": 2,
                    "VpcId": {
                        "Fn::ImportValue": {
                            "Fn::Join": [
                                ":",
                                [
                                    {
                                        "Ref": "StackName"
                                    },
                                    "VPCId"
                                ]
                            ]
                        }
                    }
                }
            },
            "LoadBalancerRule": {
                "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
                "Properties": {
                    "Actions": [
                        {
                            "TargetGroupArn": {
                                "Ref": "TargetGroup"
                            },
                            "Type": "forward"
                        }
                    ],
                    "Conditions": [
                        {
                            "Field": "path-pattern",
                            "Values": [
                                {
                                    "Ref": "Path"
                                }
                            ]
                        }
                    ],
                    "ListenerArn": {
                        "Fn::ImportValue": {
                            "Fn::Join": [
                                ":",
                                [
                                    {
                                        "Ref": "StackName"
                                    },
                                    "PublicListener"
                                ]
                            ]
                        }
                    },
                    "Priority": {
                        "Ref": "Priority"
                    }
                }
            }
        }
    }